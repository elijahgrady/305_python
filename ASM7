from polynomial import Polynomial
from student import Student # write your own Student class
import time

class proxy:
    atime = time.asctime(time.localtime(time.time())) #access time
    ctime = time.asctime(time.localtime(time.time())) #creation time
    mtime = time.asctime(time.localtime(time.time())) #modification time

    def __init__(self, obj):
        self._obj = obj
        self.ctime = time.asctime(time.localtime(time.time()))

    def __getattr__(self, name):
        atime = time.asctime(time.localtime(time.time()))
        return getattr(self._obj, name)

    def __setattr__(self, name, value):
        if name not in ['_obj', 'ctime', 'cost_base']:
            mtime = time.asctime(time.localtime(time.time()))
            setattr(self._obj, name, value)
        else:
            mtime = time.asctime(time.localtime(time.time()))
            object.__setattr__(self, name, value)
